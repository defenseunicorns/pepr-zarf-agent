{
  "version": 3,
  "sources": ["../pepr.ts", "../package.json", "../capabilities/wasm_exec.js", "../capabilities/zarf-agent.ts", "../capabilities/kubernetes-api.ts", "../capabilities/secrets/initSecrets.ts", "../capabilities/transformer-api.ts"],
  "sourcesContent": ["import { PeprModule } from \"pepr\";\n// cfg loads your pepr configuration from package.json\nimport cfg from \"./package.json\";\nimport \"./capabilities/wasm_exec.js\";\n// HelloPepr is a demo capability that is included with Pepr. Comment or delete the line below to remove it.\n// import { HelloPepr } from \"./capabilities/hello-pepr\";\nimport { ZarfAgent } from \"./capabilities/zarf-agent\";\n// import { HelloPepr } from \"./capabilities/hello-pepr\";\n/**\n * This is the main entrypoint for this Pepr module. It is run when the module is started.\n * This is where you register your Pepr configurations and capabilities.\n */\nnew PeprModule(cfg, [\n  // \"HelloPepr\" is a demo capability that is included with Pepr. Comment or delete the line below to remove it.\n  // HelloPepr,\n  ZarfAgent,\n  // HelloPepr,\n  // Your additional capabilities go here\n]);\n", "{\n  \"name\": \"pepr-zarf-agent\",\n  \"version\": \"0.0.1\",\n  \"description\": \"\",\n  \"keywords\": [\n    \"pepr\",\n    \"k8s\",\n    \"policy-engine\",\n    \"pepr-module\",\n    \"security\"\n  ],\n  \"pepr\": {\n    \"name\": \"pepr-zarf-agent\",\n    \"uuid\": \"f64b6d4f-93ec-54d3-99a4-e70c751da008\",\n    \"onError\": \"audit\",\n    \"alwaysIgnore\": {\n      \"namespaces\": [],\n      \"labels\": []\n    }\n  },\n  \"scripts\": {\n    \"k3d-setup\": \"k3d cluster delete pepr-dev && k3d cluster create pepr-dev --k3s-arg '--debug@server:0'\",\n    \"start\": \"pepr dev\"\n  },\n  \"dependencies\": {\n    \"@grpc/grpc-js\": \"^1.8.17\",\n    \"pepr\": \"0.7.0\",\n    \"ts-proto\": \"^1.150.1\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.2\",\n    \"grpc_tools_node_protoc_ts\": \"^5.3.3\",\n    \"grpc-tools\": \"^1.12.4\",\n    \"jest\": \"^29.5.0\",\n    \"ts-jest\": \"^29.1.0\",\n    \"ts-protoc-gen\": \"^0.15.0\",\n    \"typescript\": \"5.0.4\"\n  }\n}\n", "// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\"use strict\";\n\n(() => {\n\t    // Initialize the polyfill\n\t\tif (typeof globalThis.crypto === 'undefined') {\n\t\t\tglobalThis.crypto = {\n\t\t\t  getRandomValues: (array) => {\n\t\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\t  array[i] = Math.floor(Math.random() * 256);\n\t\t\t\t}\n\t\t\t  },\n\t\t\t};\n\t\t  }\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!globalThis.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobalThis.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substring(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substring(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!globalThis.process) {\n\t\tglobalThis.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!globalThis.crypto) {\n\t\tthrow new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n\t}\n\n\tif (!globalThis.performance) {\n\t\tthrow new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n\t}\n\n\tif (!globalThis.TextEncoder) {\n\t\tthrow new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n\t}\n\n\tif (!globalThis.TextDecoder) {\n\t\tthrow new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n\t}\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobalThis.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tif (!(instance instanceof WebAssembly.Instance)) {\n\t\t\t\tthrow new Error(\"Go.run: WebAssembly.Instance expected\");\n\t\t\t}\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobalThis,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[globalThis, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\t// The linker guarantees global data starts from at least wasmMinDataAddr.\n\t\t\t// Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\t\t\tconst wasmMinDataAddr = 4096 + 8192;\n\t\t\tif (offset >= wasmMinDataAddr) {\n\t\t\t\tthrow new Error(\"total length of command line and environment variables exceeds limit\");\n\t\t\t}\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n})();\n", "import { Capability, a, Log } from \"pepr\";\nimport { K8sAPI } from \"./kubernetes-api\";\nimport { InitSecrets } from \"./secrets/initSecrets\";\nimport { argoRepoSecretDataDecoder, argoSecretLabels } from \"./helpers\";\nimport { TransformerAPI } from \"./transformer-api\";\n\n/**\n *  The ZarfAgent capability handles pod mutations for Zarf.\n */\nexport const ZarfAgent = new Capability({\n  name: \"zarf-agent\",\n  description: \"A mutating webhook for Zarf.\",\n  namespaces: [], // all namespaces\n});\n\n// Use the 'When' function to create a new Capability Action\nconst { When } = ZarfAgent;\n\n/**\n * ---------------------------------------------------------------------------------------------------\n * Initialize InitSecrets & TransformerAPI\n */\nconst _initSecrets = new InitSecrets(new K8sAPI());\nconst _transformer = new TransformerAPI();\n// Initialize TransformerAPI & fetch Secrets\n// Watch will take over secrets eventually\n(async () => {\n  Log.SetLogLevel(\"debug\");\n  await _initSecrets.getZarfStateSecret();\n  await _initSecrets.getZarfPrivateRegistrySecret();\n  await _transformer.run();\n})()\n\n\n/**\n * ---------------------------------------------------------------------------------------------------\n *                                   CAPABILITY ACTION (Zarf-Agent)                                   *\n * ---------------------------------------------------------------------------------------------------\n *\n * This Capability Action fetches the `zarf-state` and `private-registry` secrets. It transformed\n * pods and Argo Apps to meet internal requirements for working with Zarf.\n */\nWhen(a.Secret)\n  .IsCreated()\n  .InNamespace(\"argocd\")\n  .WithLabel(\"argocd.argoproj.io/secret-type\",\"repository\")\n  .Then(secret => {\n      secret.Raw = JSON.parse(\n        _transformer.transformArgoSecret(\n          secret.Raw,\n          secret.Request,\n          _initSecrets.zarfStateSecret.gitServer.address,\n          _initSecrets.zarfStateSecret.gitServer.pushUsername,\n          _initSecrets.zarfStateSecret.gitServer.pullPassword,\n          _initSecrets.zarfStateSecret.gitServer.pullUsername\n        )\n      )\n  })\nWhen(a.GenericKind, {\n  group: \"argoproj.io\",\n  version: \"v1alpha1\",\n  kind: \"Application\",//(s) double check this\n})\n  .IsCreated()\n  .Then(app => {\n    delete app.Raw?.finalizers\n    try {\n      app.Raw = JSON.parse(\n        _transformer.transformArgoApp(\n          app.Raw,\n          app.Request,\n          _initSecrets.zarfStateSecret.gitServer.address,\n          _initSecrets.zarfStateSecret.gitServer.pushUsername\n        )\n      )\n    } catch (err) {\n      Log.error(\"Error transforming app\", err)\n    }\n\n  })\n\nWhen(a.Pod)\n  .IsCreatedOrUpdated()\n  .Then(async pod => {\n    try {\n      // Parse output of transformPod to replace pod.Raw\n      pod.Raw = JSON.parse(\n        _transformer.transformPod(\n          pod.Raw,\n          pod.Request,\n          _initSecrets.privateRegistrySecretName,\n          _initSecrets.zarfStateSecret.registryInfo.address\n        )\n      );\n    } catch (err) {\n      Log.error(\"Error transforming pod\", err);\n    }\n    console.log(\"pod\", JSON.stringify(pod, undefined, 2));\n  });\n", "import { Log } from \"pepr\";\nimport {\n  AppsV1Api,\n  CoreV1Api,\n  KubeConfig,\n  V1Secret,\n  PatchUtils,\n} from \"@kubernetes/client-node\";\n\nimport { fetchStatus } from \"pepr\";\n\nexport class K8sAPI {\n  k8sApi: CoreV1Api;\n  k8sAppsV1Api: AppsV1Api;\n\n  constructor() {\n    const kc = new KubeConfig();\n    kc.loadFromDefault();\n    this.k8sApi = kc.makeApiClient(CoreV1Api);\n    this.k8sAppsV1Api = kc.makeApiClient(AppsV1Api);\n  }\n\n  async addImagePullSecretToPod(\n    name: string,\n    namespace: string,\n    secretName: string\n  ): Promise<void> {\n    try {\n      const patch = [\n        {\n          op: \"replace\",\n          path: \"/spec/imagePullSecrets\",\n          value: [\n            {\n              name: secretName,\n            },\n          ],\n        },\n      ];\n      this.k8sApi\n        .patchNamespacedPod(\n          name,\n          namespace,\n          patch,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          { headers: { \"content-type\": \"application/json-patch+json\" } }\n        )\n        .then(() => {\n          Log.info(\"Pod patched successfully.\");\n        })\n        .catch(error => {\n          Log.error(\"Error patching pod:\", JSON.stringify(error.response.body));\n        });\n    } catch (err) {\n      Log.error(\"Could not add imagePullSecret to pod\", err);\n    }\n    //   this.k8sApi.readNamespacedPod(name, namespace)\n    //     .then(({ body: pod }) => {\n    //       // Append the new imagePullSecret to the existing imagePullSecrets array\n    //       const updatedImagePullSecrets = pod.spec.imagePullSecrets || [];\n    //       updatedImagePullSecrets.push({ name: secretName });\n\n    //       // Update the pod with the modified imagePullSecrets\n    //       pod.spec.imagePullSecrets = updatedImagePullSecrets;\n\n    //       return this.k8sApi.replaceNamespacedPod(name, namespace, pod);\n    //     })\n    //     .then(() => {\n    //       Log.info('Pod updated successfully.');\n    //     })\n    //     .catch((error) => {\n    //       Log.error('Error updating pod:', JSON.stringify(error.response.body));\n    //     });\n    // } catch (err) {\n    //   Log.error(\"Could not add imagePullSecret to pod\", err);\n    // }\n  }\n  async getSecretValues(\n    name: string,\n    namespace: string,\n    keys: string[]\n  ): Promise<{ [key: string]: string }> {\n    const response = await this.k8sApi.readNamespacedSecret(name, namespace);\n    const secret = response.body.data;\n    const secretValues: { [key: string]: string } = {};\n\n    if (secret) {\n      keys.forEach(key => {\n        if (secret[key]) {\n          // Decode the base64 encoded secret value\n          const decodedValue = Buffer.from(secret[key], \"base64\").toString(\n            \"utf-8\"\n          );\n          secretValues[key] = decodedValue;\n        } else {\n          throw new Error(`Could not find key '${key}' in the secret ${name}`);\n        }\n      });\n      return secretValues;\n    }\n    throw new Error(`Could not retrieve the secret ${name}`);\n  }\n\n  // async restartDeployment(name: string, namespace: string) {\n  //   const patch = [\n  //     {\n  //       op: \"add\",\n  //       path: \"/spec/template/metadata/annotations/kubectl.kubernetes.io~1restartedAt\",\n  //       value: new Date().toISOString(),\n  //     },\n  //   ];\n\n  //   await this.k8sAppsV1Api.patchNamespacedDeployment(\n  //     name,\n  //     namespace,\n  //     patch,\n  //     undefined,\n  //     undefined,\n  //     undefined,\n  //     undefined,\n  //     undefined,\n  //     { headers: { \"content-type\": \"application/json-patch+json\" } }\n  //   );\n  // }\n\n  // async getSecretsByPattern(pattern: string, namespace: string) {\n  //   // Get all secrets in the namespace\n  //   const secrets = await this.k8sApi.listNamespacedSecret(namespace);\n  //   if (!secrets || !secrets.body || !secrets.body.items) {\n  //     return [];\n  //   }\n\n  //   // Filter the secrets by the provided pattern\n  //   const matchingSecrets = secrets.body.items.filter(\n  //     secret =>\n  //       secret.metadata &&\n  //       secret.metadata.name &&\n  //       secret.metadata.name.startsWith(pattern)\n  //   );\n\n  //   return matchingSecrets;\n  // }\n\n  async createOrUpdateSecret(\n    name: string,\n    namespace: string,\n    secretData: Record<string, string>\n  ) {\n    // Prepare the Secret object\n    const secret: V1Secret = {\n      apiVersion: \"v1\",\n      kind: \"Secret\",\n      metadata: {\n        name: name,\n        namespace: namespace,\n      },\n      data: {},\n    };\n\n    // Convert all the secretData values to base64 and add them to the Secret object\n    for (const key in secretData) {\n      secret.data[key] = Buffer.from(secretData[key]).toString(\"base64\");\n    }\n\n    try {\n      // Check if the Secret exists\n      await this.k8sApi.readNamespacedSecret(name, namespace);\n\n      // If the Secret exists, update it\n      await this.k8sApi.replaceNamespacedSecret(name, namespace, secret);\n    } catch (e) {\n      if (e.response && e.response.statusCode === fetchStatus.NOT_FOUND) {\n        // If the Secret doesn't exist, create it\n        await this.k8sApi.createNamespacedSecret(namespace, secret);\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n", "import { Log } from \"pepr\";\nimport { K8sAPI } from \"../kubernetes-api\";\nimport { V1Secret } from \"@kubernetes/client-node\";\nimport { ZarfState, AuthData } from \"../api-types\";\n\nexport class InitSecrets {\n  k8sApi: K8sAPI;\n\n  zarfStateSecretName = \"zarf-state\";\n  zarfStateSecretNamespace = \"zarf\";\n  zarfStateSecretKeys = [\"state\"];\n  zarfStateSecretData: Record<string, string>;\n\n  privateRegistrySecretName = \"private-registry\";\n  privateRegistrySecretNamespace = \"zarf\";\n  privateRegistrySecretKeys = [\".dockerconfigjson\"];\n  privateRegistrySecretData: Record<string, string>;\n\n  zarfStateSecret: ZarfState;\n  privateRegistrySecret: AuthData;\n\n  constructor(k8sApi: K8sAPI) {\n    this.k8sApi = k8sApi;\n  }\n\n  private decodeBase64(secret: V1Secret, key: string): string {\n    if (!secret.data) {\n      throw new Error(\"Data is missing in secret\");\n    }\n    if (!secret.data[key]) {\n      throw new Error(`Key ${key} is missing in secret`);\n    }\n    return Buffer.from(secret.data[key], \"base64\").toString(\"utf-8\");\n  }\n\n  // TODO type this\n  async getZarfStateSecret(): Promise<ZarfState> {\n    const secretData = await this.k8sApi.getSecretValues(\n      this.zarfStateSecretName,\n      this.zarfStateSecretNamespace,\n      this.zarfStateSecretKeys\n    );\n\n    const zarfState: ZarfState = JSON.parse(secretData.state);\n    this.zarfStateSecret = zarfState;\n    this.zarfStateSecretData = secretData;\n    Log.info(\"Zarf State Secret\", JSON.stringify(zarfState, undefined, 2));\n    return zarfState;\n  }\n\n  async getZarfPrivateRegistrySecret(): Promise<AuthData> {\n    const secretData = await this.k8sApi.getSecretValues(\n      this.privateRegistrySecretName,\n      this.privateRegistrySecretNamespace,\n      this.privateRegistrySecretKeys\n    );\n    const authData: AuthData = JSON.parse(secretData[\".dockerconfigjson\"]);\n    this.privateRegistrySecret = authData;\n    this.privateRegistrySecretData = secretData;\n    Log.info(\"Private registry secret\", JSON.stringify(authData, undefined, 2));\n    return authData;\n  }\n\n  async createOrUpdateSecret(\n    name: string,\n    namespace: string,\n    secretData: Record<string, string>\n  ): Promise<void> {\n    await this.k8sApi.createOrUpdateSecret(name, namespace, secretData);\n  }\n\n  async patchPodImagePullSecret(\n    name: string,\n    namespace: string\n  ): Promise<void> {\n    await this.k8sApi.addImagePullSecretToPod(\n      name,\n      namespace,\n      this.privateRegistrySecretName\n    );\n    return;\n  }\n\n}\n", "import { Log, a } from \"pepr\";\nimport { readFileSync } from \"fs\";\nimport \"./wasm_exec.js\";\nimport { Request } from \"./api-types.js\";\n\nexport class TransformerAPI {\n  private go: any;\n  private instance: WebAssembly.Instance;\n  mutateArgoSecret(\n    secret: string,\n    request: string,\n    targetHost: string,\n    pushUsername: string,\n    pullPassword: string,\n    pullUsername: string\n  ): string {\n      // @ts-ignore\n      return zarfTransform.argoSecretTransform(\n        secret,\n        request,\n        targetHost,\n        pushUsername,\n        pullPassword,\n        pullUsername\n      )\n      }   \n  mutateArgoApp(\n    app: string,\n    request: string,\n    targetHost: string,\n    pushUsername: string,\n  ): string {\n    // @ts-ignore\n    return zarfTransform.repoURLTransform(\n      app,\n      request,\n      targetHost,\n      pushUsername,\n    );\n  }\n  mutatePod(\n    pod: string,\n    request: string,\n    imagePullSecretName: string,\n    targetHost: string\n  ): string {\n    // @ts-ignore\n    return zarfTransform.podTransform(\n      pod,\n      request,\n      imagePullSecretName,\n      targetHost\n    );\n  }\n  // this create global zarfTransform object\n  private async instantiateWebAssembly(): Promise<void> {\n    return WebAssembly.instantiate(\n      readFileSync(\"capabilities/main.wasm\"),\n      this.go.importObject\n    ).then(wasmModule => {\n      this.instance = this.go.run(wasmModule.instance);\n    });\n  }\n\n  public async run(): Promise<void> {\n    this.go = new globalThis.Go();\n    try {\n      await this.instantiateWebAssembly();\n    } catch (err) {\n      Log.error(\"Error instantiating wasm module\", err.toString());\n      return;\n    }\n  }\n  transformArgoSecret(\n    secret: a.Secret,\n    request: Request,\n    targetHost: string,\n    pushUsername: string,\n    pullPassword: string,\n    pullUsername: string\n  ): string {\n    let transformedSecret: string;\n    if (!this.instance) {\n      throw new Error(\"WebAssembly module not loaded or initialized.\");\n    }\n    try {\n      transformedSecret = this.mutateArgoSecret(\n        JSON.stringify(secret),\n        JSON.stringify(request),\n        targetHost,\n        pushUsername,\n        pullPassword,\n        pullUsername\n      );\n    } catch (err) {\n      Log.error(\"Error calling repoURLTransform\", err);\n    }\n    return transformedSecret;\n  }\n  transformArgoApp(\n    app: a.GenericKind,\n    request: Request,\n    targetHost: string,\n    pushUsername: string,\n  ): string {\n    let transformedApp: string;\n    if (!this.instance) {\n      throw new Error(\"WebAssembly module not loaded or initialized.\");\n    }\n    try {\n      transformedApp = this.mutateArgoApp(\n        JSON.stringify(app),\n        JSON.stringify(request),\n        targetHost,\n        pushUsername\n      );\n    } catch (err) {\n      Log.error(\"Error calling repoURLTransform\", err);\n    }\n    return transformedApp;\n  }\n  transformPod(\n    pod: a.Pod,\n    request: Request,\n    imagePullSecretName: string,\n    targetHost: string\n  ): string {\n    let transformedPod: string;\n    if (!this.instance) {\n      throw new Error(\"WebAssembly module not loaded or initialized.\");\n    }\n    try {\n      transformedPod = this.mutatePod(\n        JSON.stringify(pod),\n        JSON.stringify(request),\n        imagePullSecretName,\n        targetHost\n      );\n    } catch (err) {\n      Log.error(\"Error calling podTransform\", err);\n    }\n    return transformedPod;\n  }\n}\n"],
  "mappings": "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",
  "names": ["import_pepr", "a", "import_pepr", "import_pepr", "import_pepr", "import_pepr"]
}
